{"version":3,"names":["colorPickerCss","throttleFor60FpsInMs","ColorPicker","constructor","hostRef","this","internalColorUpdateContext","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","handleTabActivate","event","channelMode","currentTarget","getAttribute","updateChannelsFromColor","color","handleColorFieldScopeKeyDown","key","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","preventDefault","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","shiftKey","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","allowEmpty","input","target","hex","value","normalizedHex","normalizeHex","hexify","alphaCompatible","Color","handleSavedColorSelect","swatch","handleChannelInput","channelIndex","Number","isAlphaChannel","limit","OPACITY_LIMITS","max","RGB_LIMITS","Object","keys","HSV_LIMITS","inputValue","adjustedValue","clamped","clamp","toString","internalSyncChildElValue","handleChannelChange","channels","shouldClearChannels","opacityToAlpha","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","isPrimaryPointerButton","offsetX","offsetY","document","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","activeCanvasInfo","context","colorFieldRenderingContext","bounds","canvas","getBoundingClientRect","colorFieldScopeNode","focus","handleHueSliderPointerDown","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","handleOpacitySliderPointerDown","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","previouslyDragging","drawColorControls","calciteColorPickerChange","emit","el","isConnected","samplingX","samplingY","clientX","clientY","matches","width","height","storeColorFieldScope","node","storeHueScope","renderChannelsTabTitle","activeChannelMode","messages","selected","label","rgb","hsv","h","class","CSS","colorMode","onCalciteTabsActivate","renderChannelsTab","alphaChannel","isRgb","channelAriaLabels","red","green","blue","saturation","direction","getElementDir","channelsToRender","slice","control","dir","map","channelValue","index","alphaToOpacity","renderChannel","ariaLabel","suffix","channel","lang","effectiveLocale","numberButtonType","numberingSystem","onCalciteInputChange","onCalciteInputInput","onKeyDown","handleKeyDown","scale","style","marginLeft","suffixText","type","deleteColor","colorToDelete","inStorage","savedColors","indexOf","filter","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","setItem","JSON","stringify","saveColor","colorToSave","alreadySaved","throttle","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","dimensions","colorField","Math","round","s","v","saturationv","initColorField","getContext","updateCanvasSize","initHueSlider","initOpacitySlider","storeOpacityScope","handleOpacityScopeKeyDown","opacityScopeLeft","channelsDisabled","DEFAULT_COLOR","disabled","format","hideChannels","hexDisabled","hideHex","hideSaved","savedDisabled","undefined","messageOverrides","defaultMessages","toChannels","DIMENSIONS","m","hueScopeLeft","handleAlphaChannelChange","console","warn","handleColorChange","oldColor","previousColor","handleFormatChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","handleValueChange","oldValue","checkMode","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","composedPath","some","_a","classList","contains","complementaryBump","async","componentLoaded","setUpLoadableComponent","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","removeEventListener","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","render","colorFieldWidth","slider","sliderWidth","thumb","radius","thumbRadius","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","alpha","noColor","vertical","noHex","noChannels","noSaved","container","controlAndScope","onPointerDown","ref","scope","colorFieldScope","role","top","left","tabindex","previewAndSliders","preview","sliders","hueSlider","hueScope","opacitySlider","opacity","min","opacityScope","controlSection","section","hexAndChannelsGroup","hexOptions","onCalciteColorPickerHexInputChange","colorModeContainer","splitSection","slot","savedColorsSection","header","saved","savedColorsButtons","appearance","iconStart","kind","onClick","length","savedColor","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","toValue","hexMode","includes","hasAlpha","HEXA","replace","string","needToInjectAlpha","model","values","colorObject","object","normalizeAlpha","getSliderCapSpacing","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","devicePixelRatio","window","adjustedSliderDimensions","_b","_c","hsvColor","requestAnimationFrame","drawThumb","startAngle","endAngle","PI","outlineWidth","beginPath","arc","fill","strokeStyle","lineWidth","stroke","drawActiveHueSliderColor","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","pattern","createPattern","getCheckeredBackgroundPattern","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","createElement","patternContext","array","isAlpha","floor","push","delegatesFocus","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.css?tag=calcite-color-picker&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.js"],"sourcesContent":["/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-right {\n  0% {\n    opacity: 0;\n    transform: translate3D(-5px, 0, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-left {\n  0% {\n    opacity: 0;\n    transform: translate3D(5px, 0, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-right {\n  animation-name: in-right;\n}\n\n.calcite-animate__in-left {\n  animation-name: in-left;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: var(--calcite-app-z-index-dropdown);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: inline-block;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n  font-weight: var(--calcite-font-weight-normal);\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n:host([scale=s]) {\n  --calcite-color-picker-spacing: 8px;\n}\n:host([scale=s]) .container {\n  inline-size: 160px;\n}\n:host([scale=s]) .saved-colors {\n  gap: 0.25rem;\n  grid-template-columns: repeat(auto-fill, 20px);\n}\n\n:host([scale=m]) {\n  --calcite-color-picker-spacing: 12px;\n}\n:host([scale=m]) .container {\n  inline-size: 272px;\n}\n\n:host([scale=l]) {\n  --calcite-color-picker-spacing: 16px;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=l]) .container {\n  inline-size: 464px;\n}\n:host([scale=l]) .section:first-of-type {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n:host([scale=l]) .saved-colors {\n  grid-template-columns: repeat(auto-fill, 32px);\n}\n:host([scale=l]) .control-section {\n  flex-wrap: nowrap;\n  align-items: baseline;\n  flex-wrap: wrap;\n}\n:host([scale=l]) .color-hex-options {\n  display: flex;\n  flex-shrink: 1;\n  flex-direction: column;\n  justify-content: space-around;\n}\n:host([scale=l]) .color-mode-container {\n  flex-shrink: 3;\n}\n\n.container {\n  background-color: var(--calcite-ui-foreground-1);\n  display: inline-block;\n  border: 1px solid var(--calcite-ui-border-1);\n}\n\n.control-and-scope {\n  position: relative;\n  display: flex;\n  cursor: pointer;\n  touch-action: none;\n}\n\n.scope {\n  position: absolute;\n  z-index: var(--calcite-app-z-index);\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n}\n.scope:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          );\n  outline-offset: 16px;\n}\n\n.hex-and-channels-group {\n  inline-size: 100%;\n}\n\n.hex-and-channels-group,\n.control-section {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n}\n.section:first-of-type {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.sliders {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n}\n\n.preview-and-sliders {\n  display: flex;\n  align-items: center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--calcite-ui-text-1);\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  display: flex;\n  row-gap: 0.125rem;\n}\n\n.channel[data-channel-index=\"3\"] {\n  inline-size: 159px;\n}\n\n:host([scale=s]) .channels {\n  flex-wrap: wrap;\n}\n:host([scale=s]) .channel {\n  flex-basis: 30%;\n  flex-grow: 1;\n}\n:host([scale=s]) .channel[data-channel-index=\"3\"] {\n  inline-size: unset;\n  margin-inline-start: unset;\n}\n\n:host([scale=l]) .channel[data-channel-index=\"3\"] {\n  inline-size: 131px;\n}\n\n.saved-colors {\n  display: grid;\n  gap: 0.5rem;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  outline-offset: 0;\n  outline-color: transparent;\n  cursor: pointer;\n}\n.saved-color:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n.saved-color:hover {\n  transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n  outline: 2px solid var(--calcite-ui-border-2);\n  outline-offset: 2px;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.4.2\n */\nimport { h } from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport { getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { CSS, DEFAULT_COLOR, DEFAULT_STORAGE_KEY_PREFIX, DIMENSIONS, HSV_LIMITS, OPACITY_LIMITS, RGB_LIMITS } from \"./resources\";\nimport { alphaCompatible, alphaToOpacity, colorEqual, CSSColorMode, hexify, normalizeAlpha, normalizeColor, normalizeHex, opacityToAlpha, parseMode, toAlphaMode, toNonAlphaMode } from \"./utils\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { clamp } from \"../../utils/math\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nconst throttleFor60FpsInMs = 16;\nexport class ColorPicker {\n  constructor() {\n    this.internalColorUpdateContext = null;\n    this.mode = CSSColorMode.HEX;\n    this.shiftKeyChannelAdjustment = 0;\n    this.handleTabActivate = (event) => {\n      this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n      this.updateChannelsFromColor(this.color);\n    };\n    this.handleColorFieldScopeKeyDown = (event) => {\n      const { key } = event;\n      const arrowKeyToXYOffset = {\n        ArrowUp: { x: 0, y: -10 },\n        ArrowRight: { x: 10, y: 0 },\n        ArrowDown: { x: 0, y: 10 },\n        ArrowLeft: { x: -10, y: 0 }\n      };\n      if (arrowKeyToXYOffset[key]) {\n        event.preventDefault();\n        this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n        this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n      }\n    };\n    this.handleHueScopeKeyDown = (event) => {\n      const modifier = event.shiftKey ? 10 : 1;\n      const { key } = event;\n      const arrowKeyToXOffset = {\n        ArrowUp: 1,\n        ArrowRight: 1,\n        ArrowDown: -1,\n        ArrowLeft: -1\n      };\n      if (arrowKeyToXOffset[key]) {\n        event.preventDefault();\n        const delta = arrowKeyToXOffset[key] * modifier;\n        const hue = this.baseColorFieldColor.hue();\n        const color = this.baseColorFieldColor.hue(hue + delta);\n        this.internalColorSet(color, false);\n      }\n    };\n    this.handleHexInputChange = (event) => {\n      event.stopPropagation();\n      const { allowEmpty, color } = this;\n      const input = event.target;\n      const hex = input.value;\n      if (allowEmpty && !hex) {\n        this.internalColorSet(null);\n        return;\n      }\n      const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n      if (hex !== normalizedHex) {\n        this.internalColorSet(Color(hex));\n      }\n    };\n    this.handleSavedColorSelect = (event) => {\n      const swatch = event.currentTarget;\n      this.internalColorSet(Color(swatch.color));\n    };\n    this.handleChannelInput = (event) => {\n      const input = event.currentTarget;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const isAlphaChannel = channelIndex === 3;\n      const limit = isAlphaChannel\n        ? OPACITY_LIMITS.max\n        : this.channelMode === \"rgb\"\n          ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n          : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n      let inputValue;\n      if (this.allowEmpty && !input.value) {\n        inputValue = \"\";\n      }\n      else {\n        const value = Number(input.value);\n        const adjustedValue = value + this.shiftKeyChannelAdjustment;\n        const clamped = clamp(adjustedValue, 0, limit);\n        inputValue = clamped.toString();\n      }\n      input.value = inputValue;\n      // TODO: refactor calcite-input so we don't need to sync the internals\n      // https://github.com/Esri/calcite-components/issues/6100\n      input.internalSyncChildElValue();\n    };\n    this.handleChannelChange = (event) => {\n      const input = event.currentTarget;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const channels = [...this.channels];\n      const shouldClearChannels = this.allowEmpty && !input.value;\n      if (shouldClearChannels) {\n        this.channels = [null, null, null, null];\n        this.internalColorSet(null);\n        return;\n      }\n      const isAlphaChannel = channelIndex === 3;\n      const value = Number(input.value);\n      channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n      this.updateColorFromChannels(channels);\n    };\n    this.handleSavedColorKeyDown = (event) => {\n      if (isActivationKey(event.key)) {\n        event.preventDefault();\n        this.handleSavedColorSelect(event);\n      }\n    };\n    this.handleColorFieldPointerDown = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const { offsetX, offsetY } = event;\n      document.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n      document.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n      this.activeCanvasInfo = {\n        context: this.colorFieldRenderingContext,\n        bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect()\n      };\n      this.captureColorFieldColor(offsetX, offsetY);\n      this.colorFieldScopeNode.focus();\n    };\n    this.handleHueSliderPointerDown = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const { offsetX } = event;\n      document.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n      document.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n      this.activeCanvasInfo = {\n        context: this.hueSliderRenderingContext,\n        bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect()\n      };\n      this.captureHueSliderColor(offsetX);\n      this.hueScopeNode.focus();\n    };\n    this.handleOpacitySliderPointerDown = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const { offsetX } = event;\n      document.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n      document.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n      this.activeCanvasInfo = {\n        context: this.opacitySliderRenderingContext,\n        bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect()\n      };\n      this.captureOpacitySliderValue(offsetX);\n      this.opacityScopeNode.focus();\n    };\n    this.globalPointerUpHandler = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const previouslyDragging = this.activeCanvasInfo;\n      this.activeCanvasInfo = null;\n      this.drawColorControls();\n      if (previouslyDragging) {\n        this.calciteColorPickerChange.emit();\n      }\n    };\n    this.globalPointerMoveHandler = (event) => {\n      const { activeCanvasInfo, el } = this;\n      if (!el.isConnected || !activeCanvasInfo) {\n        return;\n      }\n      const { context, bounds } = activeCanvasInfo;\n      let samplingX;\n      let samplingY;\n      const { clientX, clientY } = event;\n      if (context.canvas.matches(\":hover\")) {\n        samplingX = clientX - bounds.x;\n        samplingY = clientY - bounds.y;\n      }\n      else {\n        // snap x and y to the closest edge\n        if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n          samplingX = clientX - bounds.x;\n        }\n        else if (clientX < bounds.x) {\n          samplingX = 0;\n        }\n        else {\n          samplingX = bounds.width - 1;\n        }\n        if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n          samplingY = clientY - bounds.y;\n        }\n        else if (clientY < bounds.y) {\n          samplingY = 0;\n        }\n        else {\n          samplingY = bounds.height;\n        }\n      }\n      if (context === this.colorFieldRenderingContext) {\n        this.captureColorFieldColor(samplingX, samplingY, false);\n      }\n      else if (context === this.hueSliderRenderingContext) {\n        this.captureHueSliderColor(samplingX);\n      }\n      else if (context === this.opacitySliderRenderingContext) {\n        this.captureOpacitySliderValue(samplingX);\n      }\n    };\n    this.storeColorFieldScope = (node) => {\n      this.colorFieldScopeNode = node;\n    };\n    this.storeHueScope = (node) => {\n      this.hueScopeNode = node;\n    };\n    this.renderChannelsTabTitle = (channelMode) => {\n      const { channelMode: activeChannelMode, messages } = this;\n      const selected = channelMode === activeChannelMode;\n      const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n      return (h(\"calcite-tab-title\", { class: CSS.colorMode, \"data-color-mode\": channelMode, key: channelMode, onCalciteTabsActivate: this.handleTabActivate, selected: selected }, label));\n    };\n    this.renderChannelsTab = (channelMode) => {\n      const { allowEmpty, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n      const selected = channelMode === activeChannelMode;\n      const isRgb = channelMode === \"rgb\";\n      const channelAriaLabels = isRgb\n        ? [messages.red, messages.green, messages.blue]\n        : [messages.hue, messages.saturation, messages.value];\n      const direction = getElementDir(this.el);\n      const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n      return (h(\"calcite-tab\", { class: CSS.control, key: channelMode, selected: selected }, h(\"div\", { class: CSS.channels, dir: \"ltr\" }, channelsToRender.map((channelValue, index) => {\n        const isAlphaChannel = index === 3;\n        if (isAlphaChannel) {\n          channelValue =\n            allowEmpty && !channelValue ? channelValue : alphaToOpacity(channelValue);\n        }\n        /* the channel container is ltr, so we apply the host's direction */\n        return this.renderChannel(channelValue, index, channelAriaLabels[index], direction, isAlphaChannel ? \"%\" : \"\");\n      }))));\n    };\n    this.renderChannel = (value, index, ariaLabel, direction, suffix) => {\n      return (h(\"calcite-input\", { class: CSS.channel, \"data-channel-index\": index, dir: direction, key: index, label: ariaLabel, lang: this.effectiveLocale, numberButtonType: \"none\", numberingSystem: this.numberingSystem, onCalciteInputChange: this.handleChannelChange, onCalciteInputInput: this.handleChannelInput, onKeyDown: this.handleKeyDown, scale: this.scale === \"l\" ? \"m\" : \"s\",\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style: {\n          marginLeft: index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\"\n        }, suffixText: suffix, type: \"number\", value: value?.toString() }));\n    };\n    this.deleteColor = () => {\n      const colorToDelete = hexify(this.color, this.alphaChannel);\n      const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n      if (!inStorage) {\n        return;\n      }\n      const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.saveColor = () => {\n      const colorToSave = hexify(this.color, this.alphaChannel);\n      const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n      if (alreadySaved) {\n        return;\n      }\n      const savedColors = [...this.savedColors, colorToSave];\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.drawColorControls = throttle((type = \"all\") => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n      if (this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext) {\n        this.drawOpacitySlider();\n      }\n    }, throttleFor60FpsInMs);\n    this.captureColorFieldColor = (x, y, skipEqual = true) => {\n      const { dimensions: { colorField: { height, width } } } = this;\n      const saturation = Math.round((HSV_LIMITS.s / width) * x);\n      const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n    };\n    this.initColorField = (canvas) => {\n      this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n      this.updateCanvasSize(\"color-field\");\n      this.drawColorControls();\n    };\n    this.initHueSlider = (canvas) => {\n      this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n      this.updateCanvasSize(\"hue-slider\");\n      this.drawHueSlider();\n    };\n    this.initOpacitySlider = (canvas) => {\n      this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n      this.updateCanvasSize(\"opacity-slider\");\n      this.drawOpacitySlider();\n    };\n    this.storeOpacityScope = (node) => {\n      this.opacityScopeNode = node;\n    };\n    this.handleOpacityScopeKeyDown = (event) => {\n      const modifier = event.shiftKey ? 10 : 1;\n      const { key } = event;\n      const arrowKeyToXOffset = {\n        ArrowUp: 1,\n        ArrowRight: 1,\n        ArrowDown: -1,\n        ArrowLeft: -1\n      };\n      if (arrowKeyToXOffset[key]) {\n        event.preventDefault();\n        const delta = opacityToAlpha(arrowKeyToXOffset[key] * modifier);\n        this.captureHueSliderColor(this.opacityScopeLeft + delta);\n      }\n    };\n    this.allowEmpty = false;\n    this.alphaChannel = false;\n    this.channelsDisabled = false;\n    this.color = DEFAULT_COLOR;\n    this.disabled = false;\n    this.format = \"auto\";\n    this.hideChannels = false;\n    this.hexDisabled = false;\n    this.hideHex = false;\n    this.hideSaved = false;\n    this.savedDisabled = false;\n    this.scale = \"m\";\n    this.storageId = undefined;\n    this.messageOverrides = undefined;\n    this.numberingSystem = undefined;\n    this.value = normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel));\n    this.defaultMessages = undefined;\n    this.channelMode = \"rgb\";\n    this.channels = this.toChannels(DEFAULT_COLOR);\n    this.dimensions = DIMENSIONS.m;\n    this.effectiveLocale = \"\";\n    this.messages = undefined;\n    this.savedColors = [];\n    this.colorFieldScopeTop = undefined;\n    this.colorFieldScopeLeft = undefined;\n    this.hueScopeLeft = undefined;\n    this.opacityScopeLeft = undefined;\n    this.scopeOrientation = undefined;\n  }\n  handleAlphaChannelChange(alphaChannel) {\n    const { format } = this;\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(`ignoring alphaChannel as the current format (${format}) does not support alpha`);\n      this.alphaChannel = false;\n    }\n  }\n  handleColorChange(color, oldColor) {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n  handleFormatChange(format) {\n    this.setMode(format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n  handleScaleChange(scale = \"m\") {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  handleValueChange(value, oldValue) {\n    const { allowEmpty, format } = this;\n    const checkMode = !allowEmpty || value;\n    let modeChanged = false;\n    if (checkMode) {\n      const nextMode = parseMode(value);\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n    const dragging = this.activeCanvasInfo;\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n    const color = allowEmpty && !value\n      ? null\n      : Color(value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n        ? normalizeColor(value)\n        : value);\n    const colorChanged = !colorEqual(color, this.color);\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(color, this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")), \"internal\");\n    }\n  }\n  get baseColorFieldColor() {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  // using @Listen as a workaround for VDOM listener not firing\n  handleChannelKeyUpOrDown(event) {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n    if ((key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node) => node.classList?.contains(CSS.channel))) {\n      return;\n    }\n    const { shiftKey } = event;\n    event.preventDefault();\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component's first focusable element. */\n  async setFocus() {\n    await componentLoaded(this);\n    this.el.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  async componentWillLoad() {\n    setUpLoadableComponent(this);\n    const { allowEmpty, color, format, value } = this;\n    const willSetNoColor = allowEmpty && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible = willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n    this.updateDimensions(this.scale);\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n    await setUpMessages(this);\n  }\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    document.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    document.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    const { allowEmpty, channelsDisabled, color, colorFieldScopeLeft, colorFieldScopeTop, dimensions: { colorField: { width: colorFieldWidth }, slider: { width: sliderWidth }, thumb: { radius: thumbRadius } }, hexDisabled, hideChannels, hideHex, hideSaved, hueScopeLeft, messages, alphaChannel, opacityScopeLeft, savedColors, savedDisabled, scale, scopeOrientation } = this;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft = opacityScopeLeft ??\n      (colorFieldWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    return (h(\"div\", { class: CSS.container }, h(\"div\", { class: CSS.controlAndScope }, h(\"canvas\", { class: CSS.colorField, onPointerDown: this.handleColorFieldPointerDown,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.initColorField }), h(\"div\", { \"aria-label\": vertical ? messages.value : messages.saturation, \"aria-valuemax\": vertical ? HSV_LIMITS.v : HSV_LIMITS.s, \"aria-valuemin\": \"0\", \"aria-valuenow\": (vertical ? color?.saturationv() : color?.value()) || \"0\", class: { [CSS.scope]: true, [CSS.colorFieldScope]: true }, onKeyDown: this.handleColorFieldScopeKeyDown, role: \"slider\", style: { top: `${colorFieldScopeTop || 0}px`, left: `${colorFieldScopeLeft || 0}px` }, tabindex: \"0\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeColorFieldScope })), h(\"div\", { class: CSS.previewAndSliders }, h(\"calcite-color-picker-swatch\", { class: CSS.preview, color: selectedColorInHex, scale: \"l\" }), h(\"div\", { class: CSS.sliders }, h(\"div\", { class: CSS.controlAndScope }, h(\"canvas\", { class: { [CSS.slider]: true, [CSS.hueSlider]: true }, onPointerDown: this.handleHueSliderPointerDown,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.initHueSlider }), h(\"div\", { \"aria-label\": messages.hue, \"aria-valuemax\": HSV_LIMITS.h, \"aria-valuemin\": \"0\", \"aria-valuenow\": color?.round().hue() || DEFAULT_COLOR.round().hue(), class: { [CSS.scope]: true, [CSS.hueScope]: true }, onKeyDown: this.handleHueScopeKeyDown, role: \"slider\", style: { top: `${hueTop}px`, left: `${hueLeft}px` }, tabindex: \"0\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeHueScope })), alphaChannel ? (h(\"div\", { class: CSS.controlAndScope }, h(\"canvas\", { class: { [CSS.slider]: true, [CSS.opacitySlider]: true }, onPointerDown: this.handleOpacitySliderPointerDown,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.initOpacitySlider }), h(\"div\", { \"aria-label\": messages.opacity, \"aria-valuemax\": OPACITY_LIMITS.max, \"aria-valuemin\": OPACITY_LIMITS.min, \"aria-valuenow\": (color || DEFAULT_COLOR).round().alpha(), class: { [CSS.scope]: true, [CSS.opacityScope]: true }, onKeyDown: this.handleOpacityScopeKeyDown, role: \"slider\", style: { top: `${opacityTop}px`, left: `${opacityLeft}px` }, tabindex: \"0\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeOpacityScope }))) : null)), noHex && noChannels ? null : (h(\"div\", { class: {\n        [CSS.controlSection]: true,\n        [CSS.section]: true\n      } }, h(\"div\", { class: CSS.hexAndChannelsGroup }, noHex ? null : (h(\"div\", { class: CSS.hexOptions }, h(\"calcite-color-picker-hex-input\", { allowEmpty: allowEmpty, alphaChannel: alphaChannel, class: CSS.control, messages: messages, numberingSystem: this.numberingSystem, onCalciteColorPickerHexInputChange: this.handleHexInputChange, scale: scale, value: selectedColorInHex }))), noChannels ? null : (h(\"calcite-tabs\", { class: {\n        [CSS.colorModeContainer]: true,\n        [CSS.splitSection]: true\n      }, scale: scale === \"l\" ? \"m\" : \"s\" }, h(\"calcite-tab-nav\", { slot: \"title-group\" }, this.renderChannelsTabTitle(\"rgb\"), this.renderChannelsTabTitle(\"hsv\")), this.renderChannelsTab(\"rgb\"), this.renderChannelsTab(\"hsv\")))))), noSaved ? null : (h(\"div\", { class: { [CSS.savedColorsSection]: true, [CSS.section]: true } }, h(\"div\", { class: CSS.header }, h(\"label\", null, messages.saved), h(\"div\", { class: CSS.savedColorsButtons }, h(\"calcite-button\", { appearance: \"transparent\", class: CSS.deleteColor, disabled: noColor, iconStart: \"minus\", kind: \"neutral\", label: messages.deleteColor, onClick: this.deleteColor, scale: scale, type: \"button\" }), h(\"calcite-button\", { appearance: \"transparent\", class: CSS.saveColor, disabled: noColor, iconStart: \"plus\", kind: \"neutral\", label: messages.saveColor, onClick: this.saveColor, scale: scale, type: \"button\" }))), savedColors.length > 0 ? (h(\"div\", { class: CSS.savedColors }, [\n      ...savedColors.map((color) => (h(\"calcite-color-picker-swatch\", { class: CSS.savedColor, color: color, key: color, onClick: this.handleSavedColorSelect, onKeyDown: this.handleSavedColorKeyDown, scale: scale, tabIndex: 0 })))\n    ])) : null))));\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n  showIncompatibleColorWarning(value, format) {\n    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n  }\n  setMode(format, warn = true) {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n  ensureCompatibleMode(mode, warn) {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return alphaMode;\n    }\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return nonAlphaMode;\n    }\n    return mode;\n  }\n  captureHueSliderColor(x) {\n    const { dimensions: { slider: { width } } } = this;\n    const hue = (360 / width) * x;\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n  captureOpacitySliderValue(x) {\n    const { dimensions: { slider: { width } } } = this;\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / width) * x);\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n  internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n  toValue(color, format = this.mode) {\n    if (!color) {\n      return null;\n    }\n    const hexMode = \"hex\";\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha = (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n      return value;\n    }\n    const colorObject = \n    /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n    color[toNonAlphaMode(format)]().round().object();\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n    return colorObject;\n  }\n  getSliderCapSpacing() {\n    const { dimensions: { slider: { height }, thumb: { radius } } } = this;\n    return radius * 2 - height;\n  }\n  updateDimensions(scale = \"m\") {\n    this.dimensions = DIMENSIONS[scale];\n  }\n  drawColorField() {\n    const context = this.colorFieldRenderingContext;\n    const { dimensions: { colorField: { height, width } } } = this;\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n    this.drawActiveColorFieldColor();\n  }\n  setCanvasContextSize(canvas, { height, width }) {\n    if (!canvas) {\n      return;\n    }\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n  updateCanvasSize(context = \"all\") {\n    const { dimensions } = this;\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n    const adjustedSliderDimensions = {\n      width: dimensions.slider.width,\n      height: dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2\n    };\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(this.opacitySliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n  }\n  drawActiveColorFieldColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv();\n    const { dimensions: { colorField: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor);\n  }\n  drawThumb(context, radius, x, y, color) {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n    radius = radius - outlineWidth;\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    context.fillStyle = color.rgb().alpha(1).string();\n    context.fill();\n  }\n  drawActiveHueSliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv().saturationv(100).value(100);\n    const { dimensions: { slider: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.hue() / (360 / width);\n    const y = radius - height / 2 + height / 2;\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = x;\n    });\n    this.drawThumb(this.hueSliderRenderingContext, radius, x, y, hsvColor);\n  }\n  drawHueSlider() {\n    const context = this.hueSliderRenderingContext;\n    const { dimensions: { slider: { height, width }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n    const hueSliderColorStopKeywords = [\"red\", \"yellow\", \"lime\", \"cyan\", \"blue\", \"magenta\", \"red\"];\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    this.drawSliderPath(context, height, width, x, y);\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveHueSliderColor();\n  }\n  drawOpacitySlider() {\n    const context = this.opacitySliderRenderingContext;\n    const { baseColorFieldColor: previousColor, dimensions: { slider: { height, width }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n    this.drawSliderPath(context, height, width, x, y);\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveOpacitySliderColor();\n  }\n  drawSliderPath(context, height, width, x, y) {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n  getCheckeredBackgroundPattern() {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n    this.checkerPattern = pattern;\n    return pattern;\n  }\n  drawActiveOpacitySliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color;\n    const { dimensions: { slider: { width }, thumb: { radius } } } = this;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = x;\n    });\n    this.drawThumb(this.opacitySliderRenderingContext, radius, x, y, hsvColor);\n  }\n  updateColorFromChannels(channels) {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n  updateChannelsFromColor(color) {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n  toChannels(color) {\n    const { channelMode } = this;\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n      const isAlpha = index === 3;\n      return isAlpha ? value : Math.floor(value);\n    });\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n    return channels;\n  }\n  static get is() { return \"calcite-color-picker\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get delegatesFocus() { return true; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"color-picker.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"color-picker.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"allowEmpty\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, an empty color (`null`) will be allowed as a `value`. When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\"\n        },\n        \"attribute\": \"allow-empty\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"alphaChannel\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, the component will allow updates to the color's alpha value.\"\n        },\n        \"attribute\": \"alpha-channel\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"channelsDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, hides the RGB/HSV channel inputs\"\n        },\n        \"attribute\": \"channels-disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"color\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"InternalColor | null\",\n          \"resolved\": \"Color<ColorParam>\",\n          \"references\": {\n            \"InternalColor\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Internal prop for advanced use-cases.\"\n        },\n        \"defaultValue\": \"DEFAULT_COLOR\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"format\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Format\",\n          \"resolved\": \"\\\"auto\\\" | \\\"hex\\\" | \\\"hexa\\\" | \\\"hsl\\\" | \\\"hsl-css\\\" | \\\"hsla\\\" | \\\"hsla-css\\\" | \\\"hsv\\\" | \\\"hsva\\\" | \\\"rgb\\\" | \\\"rgb-css\\\" | \\\"rgba\\\" | \\\"rgba-css\\\"\",\n          \"references\": {\n            \"Format\": {\n              \"location\": \"import\",\n              \"path\": \"./utils\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"auto\\\"\"\n            }],\n          \"text\": \"The format of `value`.\\n\\nWhen `\\\"auto\\\"`, the format will be inferred from `value` when set.\"\n        },\n        \"attribute\": \"format\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"auto\\\"\"\n      },\n      \"hideChannels\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"use `channelsDisabled` instead\"\n            }],\n          \"text\": \"When `true`, hides the RGB/HSV channel inputs.\"\n        },\n        \"attribute\": \"hide-channels\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hexDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, hides the hex input\"\n        },\n        \"attribute\": \"hex-disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"hideHex\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"use `hexDisabled` instead\"\n            }],\n          \"text\": \"When `true`, hides the hex input.\"\n        },\n        \"attribute\": \"hide-hex\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hideSaved\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"use `savedDisabled` instead\"\n            }],\n          \"text\": \"When `true`, hides the saved colors section.\"\n        },\n        \"attribute\": \"hide-saved\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"savedDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, hides the saved colors section\"\n        },\n        \"attribute\": \"saved-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"storageId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the storage ID for colors.\"\n        },\n        \"attribute\": \"storage-id\",\n        \"reflect\": true\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<ColorPickerMessages>\",\n          \"resolved\": \"{ b?: string; blue?: string; deleteColor?: string; g?: string; green?: string; h?: string; hsv?: string; hex?: string; hue?: string; noColor?: string; opacity?: string; r?: string; red?: string; rgb?: string; s?: string; saturation?: string; saveColor?: string; saved?: string; v?: string; value?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"ColorPickerMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/color-picker/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"numberingSystem\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"NumberingSystem\",\n          \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"bali\\\" | \\\"beng\\\" | \\\"deva\\\" | \\\"fullwide\\\" | \\\"gujr\\\" | \\\"guru\\\" | \\\"hanidec\\\" | \\\"khmr\\\" | \\\"knda\\\" | \\\"laoo\\\" | \\\"latn\\\" | \\\"limb\\\" | \\\"mlym\\\" | \\\"mong\\\" | \\\"mymr\\\" | \\\"orya\\\" | \\\"tamldec\\\" | \\\"telu\\\" | \\\"thai\\\" | \\\"tibt\\\"\",\n          \"references\": {\n            \"NumberingSystem\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/locale\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n        },\n        \"attribute\": \"numbering-system\",\n        \"reflect\": true\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ColorValue | null\",\n          \"resolved\": \"HSL | HSL & ObjectWithAlpha | HSV | HSV & ObjectWithAlpha | RGB | RGB & ObjectWithAlpha | string\",\n          \"references\": {\n            \"ColorValue\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"#007ac2\\\"\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[ColorValue](https://github.com/Esri/calcite-components/blob/master/src/components/color-picker/interfaces.ts#L10)\"\n            }],\n          \"text\": \"The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\\n\\nThe type will be preserved as the color is updated.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false,\n        \"defaultValue\": \"normalizeHex(\\n    hexify(DEFAULT_COLOR, this.alphaChannel)\\n  )\"\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ColorPickerMessages\",\n          \"resolved\": \"{ b: string; blue: string; deleteColor: string; g: string; green: string; h: string; hsv: string; hex: string; hue: string; noColor: string; opacity: string; r: string; red: string; rgb: string; s: string; saturation: string; saveColor: string; saved: string; v: string; value: string; }\",\n          \"references\": {\n            \"ColorPickerMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/color-picker/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"defaultMessages\": {},\n      \"channelMode\": {},\n      \"channels\": {},\n      \"dimensions\": {},\n      \"effectiveLocale\": {},\n      \"savedColors\": {},\n      \"colorFieldScopeTop\": {},\n      \"colorFieldScopeLeft\": {},\n      \"hueScopeLeft\": {},\n      \"opacityScopeLeft\": {},\n      \"scopeOrientation\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteColorPickerChange\",\n        \"name\": \"calciteColorPickerChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the color value has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteColorPickerInput\",\n        \"name\": \"calciteColorPickerInput\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires as the color value changes.\\n\\nSimilar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component's first focusable element.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"alphaChannel\",\n        \"methodName\": \"handleAlphaChannelChange\"\n      }, {\n        \"propName\": \"color\",\n        \"methodName\": \"handleColorChange\"\n      }, {\n        \"propName\": \"format\",\n        \"methodName\": \"handleFormatChange\"\n      }, {\n        \"propName\": \"scale\",\n        \"methodName\": \"handleScaleChange\"\n      }, {\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"handleValueChange\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"keydown\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }, {\n        \"name\": \"keyup\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }];\n  }\n}\n"],"mappings":"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"}