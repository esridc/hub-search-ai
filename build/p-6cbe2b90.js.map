{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","evaluate","value","param","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","min","Math","max","within","min$1","max$1","arrow","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","center","offset","shouldAddOffset","alignmentOffset","centerOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements","undefined","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","_middlewareData$flip","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","getComputedStyle","isNode","Node","getNodeName","nodeName","toLowerCase","isHTMLElement","HTMLElement","Element","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","safari","isSafari","css","transform","perspective","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","round","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","FALLBACK_SCALE","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","isFixed","floatingOffsetParent","_win$visualViewport","_win$visualViewport2","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","isOffsetParentAnElement","scroll","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","scrollableAncestor","isBody","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getTrueOffsetParent","polyfill","getContainingBlock","getRectRelativeToOffsetParent","getOffsetParentFn","getDimensionsFn","getClientRects","Array","from","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","isVisualViewport","toString","addEventListener","passive","observer","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache","computePosition$1","configOverrides","globalThis","floatingUINonChromiumPositioningFix","floatingUIBrowserCheck","patchFloatingUiForNonChromiumBrowsers","getUAData","navigator","userAgentData","getUAString","uaData","brands","brand","version","join","userAgent","isChrome109OrAbove","find","ua","browser","parseInt","import","originalGetOffsetParent","placementDataAttribute","repositionDebounceTimeout","effectivePlacements","defaultMenuPlacement","FloatingCSS","animation","animationActive","getMiddleware","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","defaultMiddleware","filterComputedPlacements","filteredPlacements","console","warn","tagName","trim","getEffectivePlacement","floatingEl","getElementDir","reverse","reposition","component","delayed","open","debouncedReposition","positionFloatingUI","debounce","leading","maxWait","ARROW_CSS_TRANSFORM","referenceEl","overlayPositioning","effectivePlacement","floatingLayout","Object","assign","style","visibility","pointerEvents","setAttribute","cleanupMap","WeakMap","connectFloatingUI","disconnectFloatingUI","runAutoUpdate","cleanup","delete","visiblePointerSize","defaultOffsetDistance","ceil","hypot"],"sources":["./node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","./node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","./node_modules/@esri/calcite-components/dist/collection/utils/config.js","./node_modules/@esri/calcite-components/dist/collection/utils/floating-ui.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const safari = isSafari();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction isSafari() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = {\n  x: 0,\n  y: 0\n};\nfunction getVisualOffsets(element, isFixed, floatingOffsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (isFixed === void 0) {\n    isFixed = true;\n  }\n  if (!isSafari()) {\n    return noOffsets;\n  }\n  const win = element ? getWindow(element) : window;\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== win) {\n    return noOffsets;\n  }\n  return {\n    x: ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0,\n    y: ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = getVisualOffsets(domElement, isFixedStrategy, offsetParent);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isSafari();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    // ignores Window, checks for [object VisualViewport]\n    const isVisualViewport = !isElement(ancestor) && ancestor.toString().includes('V');\n    if (ancestorScroll && (animationFrame ? isVisualViewport : true)) {\n      ancestor.addEventListener('scroll', update, {\n        passive: true\n      });\n    }\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.4.2\n */\n/**\n * This module helps users provide custom configuration for component internals.\n *\n * @internal\n */\nconst configOverrides = globalThis[\"calciteComponentsConfig\"];\nconst config = {\n  /**\n   * We apply a custom fix to improve positioning for non-Chromium browsers.\n   * The fix comes at a performance cost, so provides users a way to opt-out if necessary.\n   *\n   * @internal\n   */\n  floatingUINonChromiumPositioningFix: true,\n  ...configOverrides\n};\nexport { config };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.4.2\n */\nimport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, offset, platform, shift } from \"@floating-ui/dom\";\nimport { Build } from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { config } from \"./config\";\nimport { getElementDir } from \"./dom\";\nconst floatingUIBrowserCheck = patchFloatingUiForNonChromiumBrowsers();\nasync function patchFloatingUiForNonChromiumBrowsers() {\n  function getUAData() {\n    return navigator.userAgentData;\n  }\n  function getUAString() {\n    const uaData = getUAData();\n    return uaData?.brands\n      ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n      : navigator.userAgent;\n  }\n  function isChrome109OrAbove() {\n    const uaData = getUAData();\n    if (uaData?.brands) {\n      return !!uaData.brands.find(({ brand, version }) => (brand === \"Google Chrome\" || brand === \"Chromium\") && Number(version) >= 109);\n    }\n    return !!navigator.userAgent.split(\" \").find((ua) => {\n      const [browser, version] = ua.split(\"/\");\n      return browser === \"Chrome\" && parseInt(version) >= 109;\n    });\n  }\n  if (Build.isBrowser &&\n    config.floatingUINonChromiumPositioningFix &&\n    // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n    (/firefox|safari/i.test(getUAString()) || isChrome109OrAbove())) {\n    const { offsetParent } = await import(\"composed-offset-position\");\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n  }\n}\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n/**\n * Exported for testing purposes only\n */\nexport const repositionDebounceTimeout = 100;\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\"\n];\nexport const effectivePlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\"\n];\nexport const menuPlacements = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\nexport const menuEffectivePlacements = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\"\n];\nexport const flipPlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\"\n];\nexport const defaultMenuPlacement = \"bottom-start\";\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction getMiddleware({ placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type }) {\n  const defaultMiddleware = [shift(), hide()];\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n      })\n    ];\n  }\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0\n      })\n    ];\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }));\n    }\n    else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n    if (arrowEl) {\n      middleware.push(arrow({\n        element: arrowEl\n      }));\n    }\n    return middleware;\n  }\n  return [];\n}\nexport function filterComputedPlacements(placements, el) {\n  const filteredPlacements = placements.filter((placement) => effectivePlacements.includes(placement));\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${effectivePlacements\n      .map((placement) => `\"${placement}\"`)\n      .join(\", \")\n      .trim()}`, { el });\n  }\n  return filteredPlacements;\n}\nexport function getEffectivePlacement(floatingEl, placement) {\n  const placements = [\"left\", \"right\"];\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component\n * @param options\n * @param options.referenceEl\n * @param options.floatingEl\n * @param options.overlayPositioning\n * @param options.placement\n * @param options.flipDisabled\n * @param options.flipPlacements\n * @param options.offsetDistance\n * @param options.offsetSkidding\n * @param options.arrowEl\n * @param options.type\n * @param delayed\n */\nexport async function reposition(component, options, delayed = false) {\n  if (!component.open) {\n    return;\n  }\n  return delayed ? debouncedReposition(component, options) : positionFloatingUI(component, options);\n}\nconst debouncedReposition = debounce(positionFloatingUI, repositionDebounceTimeout, {\n  leading: true,\n  maxWait: repositionDebounceTimeout\n});\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\"\n};\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nexport async function positionFloatingUI(component, { referenceEl, floatingEl, overlayPositioning = \"absolute\", placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type }) {\n  if (!referenceEl || !floatingEl) {\n    return null;\n  }\n  await floatingUIBrowserCheck;\n  const { x, y, placement: effectivePlacement, strategy: position, middlewareData } = await computePosition(referenceEl, floatingEl, {\n    strategy: overlayPositioning,\n    placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n      ? undefined\n      : getEffectivePlacement(floatingEl, placement),\n    middleware: getMiddleware({\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type\n    })\n  });\n  if (arrowEl && middlewareData.arrow) {\n    const { x, y } = middlewareData.arrow;\n    const side = effectivePlacement.split(\"-\")[0];\n    const alignment = x != null ? \"left\" : \"top\";\n    const transform = ARROW_CSS_TRANSFORM[side];\n    const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n    if (\"floatingLayout\" in component) {\n      component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n    }\n    Object.assign(arrowEl.style, {\n      ...reset,\n      [alignment]: `${alignment == \"left\" ? x : y}px`,\n      [side]: \"100%\",\n      transform\n    });\n  }\n  const referenceHidden = middlewareData.hide?.referenceHidden;\n  const visibility = referenceHidden ? \"hidden\" : null;\n  const pointerEvents = visibility ? \"none\" : null;\n  floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n  const transform = `translate(${Math.round(x)}px,${Math.round(y)}px)`;\n  Object.assign(floatingEl.style, {\n    visibility,\n    pointerEvents,\n    position,\n    top: \"0\",\n    left: \"0\",\n    transform\n  });\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const cleanupMap = new WeakMap();\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nexport function connectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: component.overlayPositioning,\n    top: \"0\",\n    left: \"0\"\n  });\n  const runAutoUpdate = Build.isBrowser\n    ? autoUpdate\n    : (_refEl, _floatingEl, updateCallback) => {\n      updateCallback();\n      return () => {\n        /* noop */\n      };\n    };\n  cleanupMap.set(component, runAutoUpdate(referenceEl, floatingEl, () => component.reposition()));\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nexport function disconnectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  const cleanup = cleanupMap.get(component);\n  if (cleanup) {\n    cleanup();\n  }\n  cleanupMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n"],"mappings":"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"}